namespace SAP_HANA_MTA.APP.Data_Base;

context PurchaseOrder {
    type BusinessKey : String(10);
    type SDate : LocalDate;
    type CurrencyT : String(5);
    type AmountT : Decimal(15, 2);
    type QuantityT : Decimal(13, 3);
    type UnitT : String(3);
    type StatusT : String(1);
    type HistoryT {
        @Comment : 'Created By'
        CREATEDBY : BusinessKey;
        @Comment : 'Created Date'
        CREATEDAT : SDate;
        @Comment : 'Changed By'
        CHANGEDBY : BusinessKey;
        @Comment : 'Change Date'
        CHANGEDAT : SDate;
    };

    @Comment : 'Purchase Order Header'
    entity Header {
            @Comment : 'Purchase Order ID'
        key PURCHASEORDERID : Integer generated by default as identity(start with 200000000 increment by 1 no minvalue maxvalue 2999999999 no cache no cycle);
            ITEMS           : association[1, 0..*] to Item on Header.PURCHASEORDERID = PURCHASEORDERID;
            HISTORY         : HistoryT;
            @Comment : 'Notes'
            NOTEID          : BusinessKey null;
            @Comment : 'Supplier'
            PARTNER         : BusinessKey;
            @Comment : 'Currency'
            CURRENCY        : CurrencyT;
            @Comment : 'Gross Amount'
            GROSSAMOUNT     : AmountT;
            @Comment : 'Net Amount'
            NETAMOUNT       : AmountT;
            @Comment : 'Tax Amount'
            TAXAMOUNT       : AmountT;
            @Comment : 'Lifecycle Status'
            LIFECYCLESTATUS : StatusT;
            @Comment : 'Approval Status'
            APPROVALSTATUS  : StatusT;
            @Comment : 'Confirmation Status'
            CONFIRMSTATUS   : StatusT;
            @Comment : 'Ordering Status'
            ORDERINGSTATUS  : StatusT;
            @Comment : 'Invoicing Status'
            INVOICINGSTATUS : StatusT;
    }
    technical configuration {
        column store;
    };

    @Comment : 'Purchase Order Item'
    entity Item {
        key POHeader     : association[*, 1..1] to Header { PURCHASEORDERID };
            @Comment : 'Product ID'
        key PRODUCT      : BusinessKey;
            @Comment : 'Notes'
            NOTEID       : BusinessKey null;
            @Comment : 'Currency'
            CURRENCY     : CurrencyT;
            @Comment : 'Gross Amount'
            GROSSAMOUNT  : AmountT;
            @Comment : 'Net Amount'
            NETAMOUNT    : AmountT;
            @Comment : 'Tax Amount'
            TAXAMOUNT    : AmountT;
            @Comment : 'Quantity'
            QUANTITY     : QuantityT;
            @Comment : 'Quantity Unit'
            QUANTITYUNIT : UnitT;
            @Comment : 'Delivery Date'
            DELIVERYDATE : SDate;
    }
    technical configuration {
        column store;
        //    index PURCHASEORDER_ITEM_ID on (POHeader.PURCHASEORDERID) asc;
    };
    
    @Comment : 'Purchase Order Item Status'
    entity ItemStatus {
        key POHeader     : association[*, 1..1] to Header { PURCHASEORDERID };
        key PRODUCT      : association[*, 1..1] to Item { PRODUCT };
            @Comment : 'Status'
            Status       : String(1);
    }
    technical configuration {
        column store;
    };

    @Comment : 'Purchase Order Item View'
    define view ItemView as
        select from Item
        inner join Header on Header.PURCHASEORDERID = Item.POHeader.PURCHASEORDERID
        left join ItemStatus on Header.PURCHASEORDERID = ItemStatus.POHeader.PURCHASEORDERID and
        						Item.PRODUCT = ItemStatus.PRODUCT.PRODUCT
        {
            Header.PURCHASEORDERID as "PurchaseOrderItemId",
            Header.PARTNER         as "PartnerId",
            Header.GROSSAMOUNT     as "AmountTotal",
            Header.NETAMOUNT       as "NetAmountTotal",
            Header.TAXAMOUNT        as "TaxAmountTotal",
            Item.PRODUCT           as "ProductID",
            Item.CURRENCY          as "CurrencyCode",
            Item.GROSSAMOUNT       as "Amount",
            Item.NETAMOUNT         as "NetAmount",
            Item.TAXAMOUNT         as "TaxAmount",
            Item.QUANTITY          as "Quantity",
            Item.QUANTITYUNIT      as "QuantityUnit",
            Item.DELIVERYDATE      as "DeliveryDate",
            (Item.GROSSAMOUNT / Item.QUANTITY) as "Price",
            (Item.NETAMOUNT / Item.QUANTITY) as "NetPrice",
            coalesce(ItemStatus.Status, 'NÃ£o Processado') as "Status"
        };
};
